*(

  //initial expression
  x = Math.Foo(5, 10) * 2 / 3

  /*
    operators by order: 
    {Set}, 
    {Sum, Diff},
    {Mul, Div, Pow, Root}, 
    {Call},
    {Get, Index} 
  */

  {
    x
    =
    Math.Foo(5, 10) * 2 / 3 // next step will be parsed this expression
  }

  {
    x
    =
    {
      Math.Foo(5, 10) 
      * 
      2 / 3
    }
  }

  {
    x
    =
    {
      {
        Math.Foo
        ()
        5, 10
      }
      * 
      {
        2 
        / 
        3
      }
    }
  }

  {
    x
    =
    {
      {
        {
          Math
          .
          Foo
        }
        ()
        5, 10
      }
      * 
      {
        2 
        / 
        3
      }
    }
  }

)

*(
  
  /*
    operators by order: 
    {Set}, 
    {Sum, Diff},
    {Mul, Div, Pow, Root}, 
    {Call},
    {Get, Index} 
  */

  // operators are sorted by priority from low priority to hight priority

  //initial expression
  x = Math.Foo(5, 10) + y * 2 + 3

  {
    x 
    = 
    Math.Foo(5, 10) + y * 2 + 3
  }
 
  {
    x 
    = 
    {
      Math.Foo(5, 10) 
      + 
      y * 2 + 3
    }
  }

  {
    x 
    = 
    {
      {
        Math.Foo
        ()
        5, 10
      } 
      + 
      {
        y * 2 
        + 
        3
      }
    }
  }

  {
    x 
    = 
    {
      {
        {
          Math
          .
          Foo
        }
        ()
        5, 10
      } 
      + 
      {
        {
          y
          * 
          2
        } 
        + 
        3
      }
    }
  }


)
