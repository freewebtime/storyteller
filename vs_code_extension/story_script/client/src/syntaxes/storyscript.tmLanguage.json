{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "StoryScript",
  "scopeName": "source.storyscript",
  "patterns": [
    {
      "include": "#storyScript"
    }
  ],
  "repository": {
    "storyScript": {
      "patterns": [
        {
          "include": "#template"
        }
      ]
    },
    "template": {
      "patterns": [
        {
          "include": "#expression-block"
        },
        {
          "include": "#templ-fcall"
        },
        {
          "include": "#templ-mention"
        }
      ]
    },
    "expression-block": {
      "patterns": [
        {
          "begin": "\\*\\(",
          "end": "\\)",
          "beginCaptures": {
            "0": {
              "name": "constant.character.escape"
            }
          },
          "endCaptures": {
            "0": {
              "name": "constant.character.escape"
            }
          },
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        }
      ]
    },
    "expression": {
      "patterns": [
        {
          "include": "#expression-block"
        },
        {
          "include": "#expr-fparams"
        },
        {
          "include": "#expr-mention"
        },
        {
          "include": "#expr-template"
        },
        {
          "include": "#expr-numbers"
        },
        {
          "include": "#expr-keywords"
        }
      ]
    },
    "expr-keywords": {
      "patterns": [
        {
          "match": "(\\+|\\-|\\/|\\%|\\=|:)",
          "name": "keyword"
        }
      ]
    },
    "expr-numbers": {
      "patterns": [
        {
          "match": "\\d+(\\.\\d+)?",
          "name": "constant.numeric"
        }
      ]
    },
    "expr-template": {
      "patterns": [
        {
          "begin": "\\\"",
          "end": "\\\"",
          "beginCaptures": {
            "0": {
              "name": "constant.character.escape"
            }
          },
          "endCaptures": {
            "0": {
              "name": "constant.character.escape"
            }
          },
          "patterns": [
            {
              "include": "#template"
            }
          ]
        }
      ]
    },
    "expr-fparams": {
      "patterns": [
        {
          "begin": "\\(",
          "end": "\\)",
          "beginCaptures": {
            "0": {
              "name": "support.function"
            }
          },
          "endCaptures": {
            "0": {
              "name": "support.function"
            }
          },
          "patterns": [
            {
              "include": "#expr-fparams-content"
            }
          ]
        }
      ]
    },
    "expr-fparams-content": {
      "patterns": [
        {
          "include": "#expression"
        },
        {
          "match": "(\\w+)(?:(:)\\s*(\\w+(?:\\.\\w+)?))?",
          "captures": {
            "1": {
              "name": "variable"
            },
            "2": {
              "name": "keyword"
            },
            "3": {
              "name": "support.type"
            }
          }
        },
        {
          "match": ",",
          "name": "keyword"
        }
      ]
    },
    "expr-mention": {
      "patterns": [
        {
          "match": "(\\*)(\\.\\.\\.)?((?:\\w+|\\\".+?\\\")(?:\\.(?:\\w+|\\\".+?\\\"))*)(?=\\s*\\()",
          "captures": {
            "1": {
              "name": "constant.character.escape"
            },
            "2": {
              "name": "constant.character.escape"
            },
            "3": {
              "name": "support.function",
              "patterns": [
                {
                  "match": "\\.",
                  "name": "constant.character.escape"
                }
              ]
            }
          }
        },
        {
          "match": "(\\*)(-)((?:\\w+|\\\".+?\\\")(?:\\.(?:\\w+|\\\".+?\\\"))*)",
          "captures": {
            "1": {
              "name": "string.regexp"
            },
            "2": {
              "name": "string.regexp"
            },
            "3": {
              "name": "string.regexp",
              "patterns": [
                {
                  "match": "\\.",
                  "name": "constant.character.escape"
                }
              ]
            }
          }
        },
        {
          "match": "(\\*)(\\.\\.\\.)?((?:\\w+|\\\".+?\\\")(?:\\.(?:\\w+|\\\".+?\\\"))*)",
          "captures": {
            "1": {
              "name": "constant.character.escape"
            },
            "2": {
              "name": "constant.character.escape"
            },
            "3": {
              "name": "variable",
              "patterns": [
                {
                  "match": "\\.",
                  "name": "constant.character.escape"
                }
              ]
            }
          }
        }
      ]
    },
    "templ-mention": {
      "patterns": [
        {
          "match": "(\\*)(\\.\\.\\.)?((?:\\w+|\\\".+?\\\")(?:\\.(?:\\w+|\\\".+?\\\"))*)(?=\\()",
          "captures": {
            "1": {
              "name": "constant.character.escape"
            },
            "2": {
              "name": "constant.character.escape"
            },
            "3": {
              "name": "support.function",
              "patterns": [
                {
                  "match": "(\\.|\\\")",
                  "name": "constant.character.escape"
                }
              ]
            },
            "4": {
              "name": "keyword"
            }
          }
        },
        {
          "match": "(\\*)(\\.\\.\\.)?((?:\\w+|\\\".+?\\\")(?:\\.(?:\\w+|\\\".+?\\\"))*)(;)?",
          "captures": {
            "1": {
              "name": "constant.character.escape"
            },
            "2": {
              "name": "constant.character.escape"
            },
            "3": {
              "name": "string"
            },
            "4": {
              "name": "constant.character.escape"
            }
          }
        }
      ]
    },
    "templ-fcall": {
      "patterns": [
        {
          "begin": "(\\*(?:\\.\\.\\.)?(?:(?:\\w+|\\\".+?\\\")(?:\\.(?:\\w+|\\\".+?\\\"))*))(\\()",
          "end": "\\)",
          "beginCaptures": {
            "0": {
              "patterns": [
                {
                  "include": "#templ-mention"
                },
                {
                  "match": "\\(",
                  "name": "support.function"
                }
              ]
            },
            "2": {
              "name": "support.function"
            }
          },
          "endCaptures": {
            "0": {
              "name": "support.function"
            }
          },
          "patterns": [
            {
              "include": "#expr-fparams-content"
            }
          ]
        }
      ]
    }
  }
}