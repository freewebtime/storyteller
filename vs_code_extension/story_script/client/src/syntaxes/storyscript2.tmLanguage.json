{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "StoryScript",
	"scopeName": "source.storyscript",
	"patterns": [
		{
			"include": "#storyScript"
		}
	],
	
	"repository": {
		
		"storyScript": {
			"patterns": [
        {
          "include": "#codebehind"
        },
        {
          "include": "#template"
        }
			]
    },

    "codebehind": {
      "patterns": [
        {
          "begin": "\\*\\/",
          "end": "\\/\\*",
          "captures": {
            "0": {
              "name": "comment"
            }
          },
          "patterns": [
            {
              "include": "#imports"
            },
            {
              "include": "#item-line"
            },
            {
              "include": "#template"
            }
          ]
        }
      ]
    },

    "imports": {
      "patterns": [
        {
          "match": "^\\s*(\\+)\\s(\\\"\\.?\\.?\\/(?:\\w|\\/|\\.)+\\\")",
          "captures": {
            "1": {
              "name": "keyword"
            },
            "2": {
              "name": "string"
            }
          }
        },
        {
          "match": "^\\s*(\\+)\\s(\\w+)(:)\\s(\\\"\\.?\\.?\\/(?:\\w|\\/|\\.)+\\\")",
          "captures": {
            "1": {
              "name": "keyword"
            },
            "2": {
              "name": "support.type"
            },
            "3": {
              "name": "keyword"
            },
            "4": {
              "name": "string"
            }
          }
        }
      ]
    },

    "expression-area": {
      "patterns": [
        {
          "begin": "\\=\\/",
          "end": "\\/\\=",
          "captures": {
            "0": {
              "name": "support.function"
            }
          },
          "patterns": [
            {
              "include": "#expression-content"
            }
          ]
        }
      ]      
    },
    
    "expression-content": {
      "patterns": [
        {
          "include": "#expression-area"
        },
        {
          "match": "\\d+",
          "name": "constant.numeric"
        },
        {
          "match": "\\w+(?:\\.\\w+)*",
          "name": "variable"
        },
        {
          "match": "(?:\\(|\\))",
          "name": "support.function"
        },
        {
          "match": "(?:,|\\+|\\-|\\\\|\\/(?!\\*|\\=)|\\*|\\%)",
          "name": "keyword"
        },
        {
          "match": "(\\\")(.*)((?<!\\\\)\\\")",
          "name": "string"
        }
      ]
    },

    "item-line": {
      "patterns": [
        {
          "include": "#copy-from-line"
        },
        {
          "include": "#function-item-line"
        },
        {
          "include": "#delete-item-line"
        },
        {
          "include": "#item-line-var"
        }
      ]
    },

    "item-line-var": {
      "patterns": [
        {
          "match": "^\\s*(\\*)\\s(\\w+)(:)(.*)",
          "name": "support.type",
          "captures": {
            "1": {
              "name": "string"
            },
            "3": {
              "name": "string"
            },
            "4": {
              "patterns": [
                {
                  "include": "#item-type"
                }
              ]
            }
          }
        }
      ]
    },

    "copy-from-line": {
      "patterns": [
        {
          "match": "^\\s*(\\*)(\\.\\.\\.)(\\w+)",
          "name": "constant.character.escape",
          "captures": {
            "1": {
              "name": "string"
            },
            "2": {
              "name": "keyword"
            },
            "3": {
              "name": "support.variable"
            }
          }
        }
      ]
    },
    
    "delete-item-line": {
      "patterns": [
        {
          "match": "^\\s*(\\*)\\s(\\w+)(:)(\\s\\-\\s?)",
          "name": "invalid",
          "captures": {
            "1": {
              "name": "string"
            },
            "3": {
              "name": "string"
            }
          }
        }
      ]
    },
    
    "function-item-line": {
      "patterns": [
        {
          "match": "^\\s*(\\*)\\s(\\w+)(:)(\\s\\(.*)",
          "name": "support.function",
          "captures": {
            "1": {
              "name": "string"
            },
            "3": {
              "name": "string"
            },
            "4": {
              "patterns": [
                {
                  "match": "(\\()(.*)(\\))",
                  "captures": {
                    "2": {
                      "patterns": [
                        {
                          "match": "(\\w+)(?:(:) ([\\w\\.]+))?",
                          "name": "variable.parameter",
                          "captures": {
                            "2": {
                              "name": "string"
                            },
                            "3": {
                              "name": "support.type"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      ]
    },
    
    "item-type": {
      "patterns": [
        {
          "match": "(\\\")(\\.?\\.?\\/[\\w\\/\\.]+)(\\\")",
          "name": "string"
        }
      ]
    },

    "template": {
      "patterns": [
        {
          "include": "#expression-area"
        },
        {
          "include": "#mention-fcall"
        },
        {
          "include": "#mention"
        }
      ]
    },
    "mention": {
      "patterns": [
        {
          "match": "(\\*)((?:\\w+|\\\".+?\\\")(?:\\.(?:\\w+|\\\".+?\\\"))*)(;?)",
          "captures": {
            "1": {
              "name": "constant.character.escape"
            },
            "2": {
              "name": "variable",
              "patterns": [
                {
                  "match": "\\\"",
                  "name": "constant.character.escape"
                },
                {
                  "match": "\\.",
                  "name": "constant.character.escape"
                }
              ]
            },
            "3": {
              "name": "string"
            }
          }
        }
      ]
    },

    "mention-fcall": {
      "patterns": [
        {
          "begin": "(\\*)((?:\\w+|\\\"[\\w\\s]+\\\")(?:\\.(?:\\w+|\\\"[\\w\\s]+\\\"))*)?(\\()",
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "constant.character.escape"
            }
          },
          "captures": {
            "1": {
              "name": "constant.character.escape"
            },
            "2": {
              "name": "support.function",
              "patterns": [
                {
                  "match": "\\\"",
                  "name": "string"
                },
                {
                  "match": "\\.",
                  "name": "constant.character.escape"
                }
              ]
            },
            "3": {
              "name": "constant.character.escape"
            }
          },
          "patterns": [
            {
              "include": "#mention-fcall-content"
            }
          ]
        }
      ]
    },

    "mention-fcall-content": {
      "patterns": [
        {
          "include": "#mention-fcall"
        },
        {
          "include": "#mention"
        },
        {
          "match": "\\d+",
          "name": "constant.numeric"
        },
        {
          "begin": "\\\"",
          "end": "(?<!\\\\)\\\"",
          "beginCaptures": {
            "0": {
              "name": "string"
            }
          },
          "endCaptures": {
            "0": {
              "name": "string"
            }
          },
          "patterns": [
            {
              "include": "#template"
            }
          ]
        },
        {
          "match": "(?:,|\\+|\\-|\\\\|\\/(?!\\*|\\=)|\\*|\\%)",
          "name": "keyword"
        }
      ]
    },

    "mention2": {
      "patterns": [
        {
          "begin": "(\\*)(?=\\w)",
          "end": "\r\r\n\n",
          "name": "string"
        }
      ]
    }

  }

}